from typing import List

class Solution:
    def maxSubArray(self, nums: List[int]) -> int:
        if len(nums) > 1:
            head = 0
            tail = len(nums) - 1
            mid = int((head + tail)/2)
            maxLeft = self.maxSubArray(nums[head:mid + 1])
            maxRight = self.maxSubArray(nums[(mid+1):tail + 1])

            tempMaxLeft = 0
            maxCrossLeft = float('-inf')
            for i in nums[(mid+1):tail + 1]:
                tempMaxLeft += i
                if tempMaxLeft > maxCrossLeft:
                    maxCrossLeft = tempMaxLeft

            tempMaxRight = 0
            maxCrossRight = float('-inf')
            for i in reversed(nums[head: mid+1]):
                tempMaxRight += i
                if tempMaxRight > maxCrossRight:
                    maxCrossRight = tempMaxRight

            maxCross = maxCrossLeft + maxCrossRight

            print("=========")
            print("aa")
            print(nums[head:mid + 1])
            print(nums[(mid+1):tail + 1])
            print("bb")
            print(maxLeft)
            print(maxRight)
            print(maxCross)
            print(max([maxLeft,maxRight,maxCross]))
            print("cc")
            return max([maxLeft,maxRight,maxCross])
        elif len(nums) == 1:
            return nums[0]
        else:
            return 0

solution = Solution()
print(solution.maxSubArray([-2,1,-3,4,-1,2,1,-5,4]))